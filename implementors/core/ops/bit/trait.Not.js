(function() {var implementors = {
"embedded_hal":[["impl Not for <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>"]],
"embedded_svc":[["impl Not for <a class=\"enum\" href=\"embedded_svc/httpd/enum.Method.html\" title=\"enum embedded_svc::httpd::Method\">Method</a>"],["impl Not for <a class=\"enum\" href=\"embedded_svc/wifi/enum.AuthMethod.html\" title=\"enum embedded_svc::wifi::AuthMethod\">AuthMethod</a>"],["impl Not for <a class=\"enum\" href=\"embedded_svc/wifi/enum.Protocol.html\" title=\"enum embedded_svc::wifi::Protocol\">Protocol</a>"],["impl Not for <a class=\"enum\" href=\"embedded_svc/wifi/enum.SecondaryChannel.html\" title=\"enum embedded_svc::wifi::SecondaryChannel\">SecondaryChannel</a>"],["impl Not for <a class=\"enum\" href=\"embedded_svc/wifi/enum.Capability.html\" title=\"enum embedded_svc::wifi::Capability\">Capability</a>"]],
"enumset":[["impl&lt;T:&nbsp;<a class=\"trait\" href=\"enumset/trait.EnumSetType.html\" title=\"trait enumset::EnumSetType\">EnumSetType</a>&gt; Not for <a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;T&gt;"]],
"esp_idf_hal":[["impl Not for <a class=\"enum\" href=\"esp_idf_hal/gpio/enum.Level.html\" title=\"enum esp_idf_hal::gpio::Level\">Level</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()